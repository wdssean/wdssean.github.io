{"meta":{"title":"Wdssean's Blog","subtitle":"我是蒟蒻，我太菜了","description":"一个蒟蒻的博客","author":"Wdssean","url":"http://wdssean.gitee.io","root":"/"},"pages":[{"title":"about","date":"2021-03-02T11:28:46.000Z","updated":"2021-03-02T13:59:04.803Z","comments":true,"path":"about/index.html","permalink":"http://wdssean.gitee.io/about/index.html","excerpt":"","text":"Hi!我是一个蒟蒻Oier!"},{"title":"标签","date":"2021-03-02T13:24:59.072Z","updated":"2021-03-02T13:24:59.072Z","comments":false,"path":"tags/index.html","permalink":"http://wdssean.gitee.io/tags/index.html","excerpt":"","text":""},{"title":"分类","date":"2021-03-02T13:24:59.067Z","updated":"2021-03-02T13:24:59.067Z","comments":false,"path":"categories/index.html","permalink":"http://wdssean.gitee.io/categories/index.html","excerpt":"","text":""},{"title":"404 Not Found：该页无法显示","date":"2021-03-02T13:24:59.063Z","updated":"2021-03-02T13:24:59.063Z","comments":false,"path":"/404.html","permalink":"http://wdssean.gitee.io/404.html","excerpt":"","text":""},{"title":"友情链接","date":"2021-03-02T13:24:59.069Z","updated":"2021-03-02T13:24:59.069Z","comments":true,"path":"links/index.html","permalink":"http://wdssean.gitee.io/links/index.html","excerpt":"","text":""}],"posts":[{"title":"GoDB开发踩坑记(补充)","slug":"GoDB开发踩坑记-补充","date":"2021-03-05T14:05:07.000Z","updated":"2021-03-07T08:34:10.176Z","comments":true,"path":"2021/03/05/GoDB开发踩坑记-补充/","link":"","permalink":"http://wdssean.gitee.io/2021/03/05/GoDB%E5%BC%80%E5%8F%91%E8%B8%A9%E5%9D%91%E8%AE%B0-%E8%A1%A5%E5%85%85/","excerpt":"前言 之前写了一篇GoDB开发踩坑记但是内容有些不全，所以来补充一下。所以没看过GoDB开发踩坑记的可以先看一下那篇文章。","text":"前言 之前写了一篇GoDB开发踩坑记但是内容有些不全，所以来补充一下。所以没看过GoDB开发踩坑记的可以先看一下那篇文章。 正文 golang encode_josn——把map[string]interface&#123;&#125;转换为json字符串 这里用到了encoding/json包（请自行引入）中的json.Marshal函数，代码如下： 1234func json_encode(data map[string]interface&#123;&#125;)(string)&#123; js,_:=json.Marshal(data); return string(js);&#125; decode_json——把json字符串转换为map[string]interface&#123;&#125; 这里用的也是encoding/json这个包，但用的是json.Unmarshal函数，代码如下 12345func json_decode(str string)(map[string]interface&#123;&#125;)&#123; data:=make(map[string]interface&#123;&#125;); json.Unmarshal([]byte(str),&amp;data); return data;&#125; js_to_govar——把js变量表达式字符串转换成go语言变量 用到了json_decode函数(上面写的)，代码如下： 12345func js_to_govar(str string)(interface&#123;&#125;)&#123; str=fmt.Sprintf(&quot;&#123;\\&quot;data\\&quot;:%v&#125;&quot;,str); js:=json_decode(str); return js[&quot;data&quot;];&#125; govar_to_js——把go语言变量转换成js变量表达式 用到了json_encode函数(上面写的，方法比较猥琐)，代码如下： 123456func govar_to_js(data interface&#123;&#125;)(string)&#123; js:=make(map[string]interface&#123;&#125;); js[&quot;data&quot;]=data; str:=json_encode(js); return str[8:len(str)-1];&#125; 这方法够猥琐吧(: js_format——格式化js变量表达式字符串 这里使用了govar_to_js以及js_to_govar函数(都是上面有的)，代码如下： 123func js_format(str string)(string)&#123; return govar_to_js(js_to_govar(str));&#125; javascript toStr——把js变量转换为js变量表达式的字符串 这个方法和govar_to_js一样猥琐，但是很实用，用了JSON.stringify函数(这个是自带的，不用导入任何包)，代码如下： 1234567function toStr(v)&#123; var data=&#123;&#125;; data[&quot;v&quot;]=v; var str=JSON.stringify(data); console.log(str) return str.substring(5,str.length-1);&#125; 总结 大家有什么意见和建议可以写在评论区内。","categories":[{"name":"开发","slug":"开发","permalink":"http://wdssean.gitee.io/categories/%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"javascript","slug":"javascript","permalink":"http://wdssean.gitee.io/tags/javascript/"},{"name":"golang","slug":"golang","permalink":"http://wdssean.gitee.io/tags/golang/"}]},{"title":"GoDB开发踩坑记","slug":"GoDB开发踩坑记","date":"2021-03-02T12:00:51.000Z","updated":"2021-03-03T10:34:06.915Z","comments":true,"path":"2021/03/02/GoDB开发踩坑记/","link":"","permalink":"http://wdssean.gitee.io/2021/03/02/GoDB%E5%BC%80%E5%8F%91%E8%B8%A9%E5%9D%91%E8%AE%B0/","excerpt":"前言 前几天因为leancloud网速太慢所以自己写了一个go语言数据库，想部署到我的树莓派上。","text":"前言 前几天因为leancloud网速太慢所以自己写了一个go语言数据库，想部署到我的树莓派上。 正文 我在写的时候发现了一些神奇的操作。 golang 把js变量的表达方式字符串转换成go变量 可以先把它嵌入到一个json字符串中，再用encoding/json里的函数把它转换成map[string]interface&#123;&#125;类型，再取出数据。伪代码: 12345&#x2F;&#x2F;js to gotmp&#x3D;&quot;&#123;\\&quot;data\\&quot;:&quot;+js+&quot;&#125;&quot;;tmp1&#x3D;decode_json(tmp);&#x2F;&#x2F;decode_json是把json字符串转换为map,这个网上查一下就可以了go&#x3D;tmp1[&quot;data&quot;]; 把go变量转换成js表达方法的字符串 可以先把变量放到一个map里，再转换成json字符串，最后在截取其中一段作为结果。伪代码： 123456&#x2F;&#x2F;go to jstmp[&quot;data&quot;]&#x3D;data;tmp1&#x3D;encode_json(data)&#x2F;&#x2F;encode_json是把map转成json字符串的函数,这个网上查一下就可以了&#x2F;&#x2F;tmp1&#x3D;&quot;&#123;\\&quot;data\\&quot;:js表达式&#125;&quot;js&#x3D;tmp1[8,len(tmp1)-1]; 格式化json字符串 方法一 可以先调用一下js to go再调用一下go to js就好了 方法二 或者先调用decode_json再调用encode_json 两种方法的区别 第一种能格式化js变量表达式，而第二种只能格式化object或者json javascript 把js变量转换成相应表达方法的字符串思路和把go变量转换成js表达方法的字符串一样，只要用JSON.stringify和substring就可以了，伪代码就不再写了 总结 终于写完了，我把代码放到gitee上了。有兴趣的可以看一下代码","categories":[{"name":"开发","slug":"开发","permalink":"http://wdssean.gitee.io/categories/%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"javascript","slug":"javascript","permalink":"http://wdssean.gitee.io/tags/javascript/"},{"name":"golang","slug":"golang","permalink":"http://wdssean.gitee.io/tags/golang/"}]}],"categories":[{"name":"开发","slug":"开发","permalink":"http://wdssean.gitee.io/categories/%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"javascript","slug":"javascript","permalink":"http://wdssean.gitee.io/tags/javascript/"},{"name":"golang","slug":"golang","permalink":"http://wdssean.gitee.io/tags/golang/"}]}